{
  "$type": "Models.Core.Simulations, Models",
  "Version": 171,
  "Name": "Simulations",
  "ResourceName": null,
  "Children": [
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "Simulation",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "2007-03-01T00:00:00",
          "End": "2007-10-31T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "z_12.met",
          "ExcelWorkSheetName": "",
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.MicroClimate, Models",
          "a_interception": 0.0,
          "b_interception": 1.0,
          "c_interception": 0.0,
          "d_interception": 0.0,
          "SoilHeatFluxFraction": 0.0,
          "MinimumHeightDiffForNewLayer": 0.0,
          "NightInterceptionFraction": 0.0,
          "ReferenceHeight": 2.0,
          "Name": "MicroClimate",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 104,
              "ASCOrder": "Vertosol",
              "ASCSubOrder": "Black",
              "SoilType": "Clay",
              "LocalName": null,
              "Site": "Norwin",
              "NearestTown": "Norwin",
              "Region": "Darling Downs and Granite Belt",
              "State": "Queensland",
              "Country": "Australia",
              "NaturalVegetation": "Qld. Bluegrass, possible Qld. Blue gum",
              "ApsoilNumber": "900",
              "Latitude": -27.581836,
              "Longitude": 151.320206,
              "LocationAccuracy": " +/- 20m",
              "YearOfSampling": "0",
              "DataSource": "CSIRO Sustainable Ecosystems, Toowoomba; Characteriesd as part of the GRDC funded project\"Doing it better, doing it smarter, managing soil water in Australian agriculture' 2011",
              "Comments": "Clay - OC, CLL for all crops estimated-based on Bongeen Mywybilla Soil No1",
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeClay": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "Rocks": null,
                  "Texture": null,
                  "BD": [
                    1.01056473311131,
                    1.07145631083388,
                    1.09393858528057,
                    1.15861335018721,
                    1.17301160318016,
                    1.16287303586874,
                    1.18749547755906
                  ],
                  "AirDry": [
                    0.130250054518252,
                    0.198689390775399,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "LL15": [
                    0.260500109036505,
                    0.248361738469248,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "DUL": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "SAT": [
                    0.588654817693846,
                    0.565676863836273,
                    0.557192986686577,
                    0.532787415023694,
                    0.527354112007486,
                    0.531179986464627,
                    0.521888499034317
                  ],
                  "KS": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": null,
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClayMetadata": null,
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "MaizeSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 5.0,
                  "SummerCona": 5.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 5.0,
                  "WinterCona": 5.0,
                  "DiffusConst": 40.0,
                  "DiffusSlope": 16.0,
                  "Salb": 0.12,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": "NaN",
                  "CatchmentArea": "NaN",
                  "PSIDul": -100.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3
                  ],
                  "KLAT": null,
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 40.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.2,
                    0.96,
                    0.6,
                    0.3,
                    0.18,
                    0.12,
                    0.12
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.02,
                    0.02,
                    0.02,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "FOM": [
                    347.1290323127564,
                    270.3443621919937,
                    163.97214434990104,
                    99.45413288704063,
                    60.32198083112468,
                    36.58713082867487,
                    22.1912165985086
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": null,
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "InitialPAWmm": 361.2454283127387,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "Maize",
              "ResourceName": "Maize",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "soybean",
              "InitialResidueType": "soybean",
              "InitialResidueMass": 2000.0,
              "InitialStandingFraction": 0.2,
              "InitialCPR": 0.0,
              "InitialCNR": 20.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Soils;",
                "using System;",
                "using System.Linq;",
                "using Models.Core;",
                "using Models.PMF;",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock Clock;",
                "        [Link] Fertiliser Fertiliser;",
                "        ",
                "        [Description(\"Crop to be fertilised\")]",
                "        public IPlant Crop { get; set; }",
                "",
                "        [Description(\"Type of fertiliser to apply? \")] ",
                "        public Fertiliser.Types FertiliserType { get; set; }",
                "    ",
                "        [Description(\"Amount of fertiliser to be applied (kg/ha)\")]",
                "        public double Amount { get; set; }",
                "        ",
                "        [EventSubscribe(\"Sowing\")]",
                "        private void OnSowing(object sender, EventArgs e)",
                "        {",
                "            Model crop = sender as Model;",
                "            if (Crop != null && crop.Name.ToLower() == (Crop as IModel).Name.ToLower())",
                "                Fertiliser.Apply(Amount: Amount, Type: FertiliserType);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Maize]"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "UreaN"
                },
                {
                  "Key": "Amount",
                  "Value": "220"
                }
              ],
              "Name": "Fertilise at sowing",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using System.Linq;",
                "",
                "namespace Models",
                "{",
                "    [Serializable] ",
                "    public class Script : Model",
                "    {",
                "",
                "\t\t[Link] Summary Summary;",
                "\t\t",
                "        [Description(\"Crop\")]",
                "        public IPlant Crop { get; set; }",
                "        ",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (Crop.IsReadyForHarvesting)",
                "            {",
                "            \tSummary.WriteMessage(this, \"Result: Harvested at Maturity.\", MessageType.Diagnostic);",
                "                Crop.Harvest();",
                "                Crop.EndCrop();",
                "            }",
                "        }",
                "    }",
                "}",
                "       ",
                "       "
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Maize]"
                }
              ],
              "Name": "Harvest",
              "ResourceName": null,
              "Children": [],
              "Enabled": false,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using System.Linq;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock Clock;",
                "        [Link] Fertiliser Fertiliser;",
                "        [Link] Summary Summary;",
                "        [Link] Soil Soil;",
                "        ",
                "        [Description(\"Crop\")]",
                "        public IPlant Crop { get; set; }",
                "",
                "        [Description(\"Sowing date (d-mmm)\")]",
                "        public string SowDate { get; set; }",
                "",
                "        [Display(Type = DisplayType.CultivarName)]",
                "        [Description(\"Cultivar to be sown\")]",
                "        public string CultivarName { get; set; }",
                "",
                "        [Description(\"Sowing depth (mm)\")]",
                "        public double SowingDepth { get; set; }",
                "",
                "        [Description(\"Row spacing (mm)\")]",
                "        public double RowSpacing { get; set; }",
                "",
                "        [Description(\"Plant population (/m2)\")]",
                "        public double Population { get; set; }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (DateUtilities.WithinDates(SowDate, Clock.Today, SowDate))",
                "            {",
                "                Crop.Sow(population: Population, cultivar: CultivarName, depth: SowingDepth, rowSpacing: RowSpacing);    ",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Maize]"
                },
                {
                  "Key": "SowDate",
                  "Value": "1-may"
                },
                {
                  "Key": "CultivarName",
                  "Value": "A_100"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "50"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "500"
                },
                {
                  "Key": "Population",
                  "Value": "8"
                }
              ],
              "Name": "Sow on a fixed date",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Soils;",
                "using System;",
                "using System.Linq;",
                "using Models.Core;",
                "using Models.PMF;",
                "using APSIM.Shared.Utilities;",
                "using Models.Surface;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock Clock;",
                "        [Link] SurfaceOrganicMatter SOM;",
                "        ",
                "        [Description(\"Tillage Date\")]",
                "        public string TillageDate { get; set; }",
                "        ",
                "        [Description(\"Fraction of Residues To Incorporate (0-1)\")]",
                "        public double Fraction { get; set; }",
                "",
                "        [Description(\"Depth of Tillage (mm)\")]",
                "        public double Depth { get; set; }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (DateUtilities.WithinDates(TillageDate, Clock.Today, TillageDate))",
                "                SOM.Incorporate(Fraction, Depth);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "TillageDate",
                  "Value": "20-mar"
                },
                {
                  "Key": "Fraction",
                  "Value": "0.4"
                },
                {
                  "Key": "Depth",
                  "Value": "150"
                }
              ],
              "Name": "Tillage on a fixed date",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Soils;",
                "using System;",
                "using Models.Functions;",
                "using Models.Core;",
                "using Models.PMF;",
                "using APSIM.Shared.Utilities;",
                "using System.Diagnostics;",
                "using Models.Climate;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock clock;",
                "        [Link] Zone zone;",
                "        [Link] Weather weather;",
                "        [Link] Summary Summary;",
                "        [Link] IEvent events = null;",
                "        ",
                "        [Description(\"Crop\")]",
                "        public IPlant Crop { get; set; }",
                "        ",
                "        [Separator(\"Triggers to kill the crop\")]",
                "",
                "        [Description(\"Number of days to wait before killing ungerminated plants\")] ",
                "        public int GermWait { get; set; }  ",
                "        ",
                "        [Description(\"Number of days to wait before killing unemerged plants\")] ",
                "        public int EmergWait { get; set; }  ",
                "        ",
                "        [Description(\"Kill if maximum daily tempterature is below (C)\")] ",
                "        public double LethalFrost { get; set; }  ",
                "        ",
                "        private DateTime GerminationDeadline; ",
                "        private DateTime EmergenceDeadline; ",
                "        ",
                "        [EventSubscribe(\"Sowing\")]",
                "        private void OnSowing(object sender, EventArgs e)",
                "        {",
                "            GerminationDeadline = clock.Today.AddDays(GermWait);",
                "            EmergenceDeadline = clock.Today.AddDays(EmergWait);",
                "        }",
                "        ",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "\t        if (Crop.IsAlive) ",
                "\t        {",
                "\t        \tdouble Stage = (double)Crop.FindByPath(\"Phenology.Stage\").Value; ",
                "\t        \tdouble LAI = (double)Crop.FindByPath(\"Leaf.LAI\").Value; ",
                "\t        \t",
                "\t        \tif (clock.Today == GerminationDeadline && Stage < 2)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Failed to Germinate.\", MessageType.Diagnostic);",
                "\t\t           Crop.Harvest();",
                "\t\t           Crop.EndCrop();",
                "\t\t        }",
                "\t            else if (clock.Today == EmergenceDeadline && Stage < 3)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Failed to Emerge.\", MessageType.Diagnostic);",
                "\t\t           Crop.Harvest();",
                "\t\t           Crop.EndCrop();",
                "\t\t        }",
                "\t\t        else if (weather.MaxT <= LethalFrost && Stage < 9)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Dead from Frost.\", MessageType.Diagnostic);",
                "\t\t           Crop.Harvest();",
                "\t\t           Crop.EndCrop();",
                "\t\t        }",
                "\t\t        else if (LAI <= 0.001 && Stage > 4 && Stage < 10)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Dead from Total Senescence (0 LAI between Flowering and Maturation).\", MessageType.Diagnostic);",
                "\t\t           Crop.Harvest();",
                "\t\t           Crop.EndCrop();",
                "\t\t        }",
                "\t        }",
                "        }",
                "        ",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Maize]"
                },
                {
                  "Key": "EmergWait",
                  "Value": "30"
                },
                {
                  "Key": "GermWait",
                  "Value": "30"
                },
                {
                  "Key": "LethalFrost",
                  "Value": "-2.2"
                }
              ],
              "Name": "Kill on event",
              "ResourceName": null,
              "Children": [],
              "Enabled": false,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": "Date",
                  "Position": 3,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "LabelOnOneLine": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                },
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": null,
                  "Position": 0,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "LabelOnOneLine": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                }
              ],
              "LegendPosition": 0,
              "LegendOrientation": 0,
              "AnnotationLocation": 0,
              "DisabledSeries": [],
              "LegendOutsideGraph": false,
              "Name": "Graph",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16777216,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 0,
                  "MarkerSize": 0,
                  "Line": 2,
                  "LineThickness": 0,
                  "TableName": "Report",
                  "XFieldName": "Date",
                  "YFieldName": "Result",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": false,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Series",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "[Clock].Today.Year as Year",
                "[Clock].Today.DayOfYear as DOY",
                "[Phenology].CurrentPhaseName as StageName",
                "[Phenology].Stage as Stage",
                "[Weather].Rain as Rain",
                "[Weather].Radn as Radn",
                "[Weather].MaxT as MaxT",
                "[Weather].MinT as MinT",
                "[Maize].Phenology.ThermalTime as ThermalTime",
                "[Maize].Grain.Wt*10 as Yieldkgha",
                "[Photosynthesis].FN as NutrientStress",
                "[Photosynthesis].FT as TempStress",
                "[Photosynthesis].FW as WaterStress",
                "[ReaperMan].Script.Result as Result"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using System.Linq;",
                "",
                "namespace Models",
                "{",
                "    [Serializable] ",
                "    public class Script : Model",
                "    {",
                "\t\t[Link] Summary Summary;",
                "\t\t",
                "        [Description(\"Crop\")]",
                "        public IPlant Crop { get; set; }",
                "        ",
                "        [Description(\"Number of days to wait before killing stalled plants\")] ",
                "        public int MaxStall { get; set; }  ",
                "        public double PrevStage {get; set;}",
                "        public int StalledFor {get; set;}",
                "        ",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            double PrevStage = 0;",
                "            double StalledFor = 0;",
                "        }",
                "        ",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "        double Stage = (double)Crop.FindByPath(\"Phenology.Stage\").Value; ",
                "\t        if (Crop.IsAlive && Stage == PrevStage) {",
                "\t        \tStalledFor += 1;",
                "\t        \tif (StalledFor >= MaxStall)",
                "\t        \t{",
                "\t\t        \tSummary.WriteMessage(this, \"Result: Stalled, killed.\", MessageType.Diagnostic);",
                "\t\t        \tStalledFor = 0;",
                "\t\t        \tPrevStage = 0;",
                "\t\t\t\t    Crop.Harvest();",
                "\t\t\t\t    Crop.EndCrop();",
                "\t\t\t\t    ",
                "\t        \t}",
                "\t        } ",
                "\t        else ",
                "\t        {",
                "\t        \tStalledFor = 0;",
                "\t        }",
                "        PrevStage = Stage;",
                "        }",
                "    }",
                "}",
                "       {",
                "  \"$type\": \"Models.Manager, Models\",",
                "  \"CodeArray\": [",
                "    \"using APSIM.Shared.Utilities;\",",
                "    \"using Models.Utilities;\",",
                "    \"using Models.Soils;\",",
                "    \"using Models.PMF;\",",
                "    \"using Models.Core;\",",
                "    \"using System;\",",
                "    \"using System.Linq;\",",
                "    \"using Models.Functions;\",",
                "    \"using System.Diagnostics;\",",
                "    \"using Models.Climate;\",",
                "    \"\",",
                "    \"namespace Models\",",
                "    \"{\",",
                "    \"    [Serializable] \",",
                "    \"    public class Script : Model\",",
                "    \"    {\",",
                "    \"\\t\\t[Link] Clock Clock;\",",
                "    \"        [Link] Zone Zone;\",",
                "    \"        [Link] Weather Weather;\",",
                "    \"        [Link] Summary Summary;\",",
                "    \"        [Link] IEvent Events = null;\",",
                "    \"        [Link] IPlant Crop;\",",
                "    \"        \",",
                "    \"        [Separator(\\\"Triggers to kill the crop\\\")]\",",
                "    \"\",",
                "    \"        [Description(\\\"Number of days to wait before killing ungerminated plants\\\")] \",",
                "    \"        public int GermWait { get; set; }  \",",
                "    \"        \",",
                "    \"        [Description(\\\"Number of days to wait before killing unemerged plants\\\")] \",",
                "    \"        public int EmergWait { get; set; }  \",",
                "    \"        \",",
                "    \"        [Description(\\\"Kill if maximum daily tempterature is below (C)\\\")]  \",",
                "    \"        public double LethalFrost { get; set; }\",",
                "    \"        \",",
                "    \"        [Description(\\\"Number of days to wait before killing stalled plants\\\")] \",",
                "    \"        public int MaxStall { get; set; }  \",",
                "    \"        public double PrevStage {get; set;}\",",
                "    \"        public int StalledFor {get; set;}  \",",
                "    \"        \",",
                "    \"        private DateTime GerminationDeadline; \",",
                "    \"        private DateTime EmergenceDeadline; \",",
                "    \"        \",",
                "    \"        public string Result {get; set;}  \",",
                "    \"        \",",
                "    \"        [EventSubscribe(\\\"StartOfSimulation\\\")]\",",
                "    \"        private void OnStartOfSimulation(object sender, EventArgs e)\",",
                "    \"        {\",",
                "    \"            double PrevStage = 0;\",",
                "    \"            double StalledFor = 0;\",",
                "    \"        }\",",
                "    \"        \",",
                "    \"        [EventSubscribe(\\\"Sowing\\\")]\",",
                "    \"        private void OnSowing(object sender, EventArgs e)\",",
                "    \"        {\",",
                "    \"            GerminationDeadline = Clock.Today.AddDays(GermWait);\",",
                "    \"            EmergenceDeadline = Clock.Today.AddDays(EmergWait);\",",
                "    \"        }\",",
                "    \"\\t\\t\",",
                "    \"        [EventSubscribe(\\\"DoManagement\\\")]\",",
                "    \"        private void OnDoManagement(object sender, EventArgs e)\",",
                "    \"        {\",",
                "    \"  \\t\\t\\tbool End = false;\",",
                "    \"  \\t\\t\\tResult = \\\"NA\\\";\",",
                "    \"  \\t\\t\\t\",",
                "    \"            if (Crop.IsReadyForHarvesting)\",",
                "    \"            {\",",
                "    \"            \\tSummary.WriteMessage(this, \\\"Result: Harvested at Maturity.\\\", MessageType.Diagnostic);\",",
                "    \"                End = true;\",",
                "    \"                Result = \\\"Harvested at Maturity.\\\";\",",
                "    \"            } \",",
                "    \"            else if (Crop.IsAlive) \",",
                "    \"            {\",",
                "    \"\\t        \\tdouble Stage = (double)Crop.FindByPath(\\\"Phenology.Stage\\\").Value; \",",
                "    \"\\t        \\tdouble LAI = (double)Crop.FindByPath(\\\"Leaf.LAI\\\").Value; \",",
                "    \"\\t        \\t        \\t\",",
                "    \"\\t\\t        if (Stage == PrevStage) {\",",
                "    \"\\t\\t        \\tStalledFor += 1;\",",
                "    \"\\t\\t        \\tif (StalledFor >= MaxStall)\",",
                "    \"\\t\\t        \\t{\",",
                "    \"\\t\\t\\t        \\tSummary.WriteMessage(this, \\\"Result: Stalled, killed.\\\", MessageType.Diagnostic);\",",
                "    \"\\t\\t\\t        \\tStalledFor = 0;\",",
                "    \"\\t\\t\\t        \\tPrevStage = 0;\",",
                "    \"\\t\\t\\t\\t\\t\\tEnd = true;\",",
                "    \"\\t\\t\\t\\t\\t\\tResult = \\\"Stalled, killed.\\\";\",",
                "    \"\\t\\t        \\t}\",",
                "    \"\\t\\t        } \",",
                "    \"\\t\\t        else \",",
                "    \"\\t\\t        {\",",
                "    \"\\t\\t       \\t\\tStalledFor = 0;\",",
                "    \"\\t\\t        }\",",
                "    \"\\t\\t\\t\\tPrevStage = Stage;\",",
                "    \"\",",
                "    \"\\t        \\tif (Clock.Today == GerminationDeadline && Stage < 2)\",",
                "    \"\\t               {\",",
                "    \"\\t               Summary.WriteMessage(this, \\\"Result: Failed to Germinate.\\\", MessageType.Diagnostic);\",",
                "    \"\\t               End = true;\",",
                "    \"\\t               Result = \\\"Failed to Germinate.\\\";\",",
                "    \"\\t\\t        }\",",
                "    \"\\t            else if (Clock.Today == EmergenceDeadline && Stage < 3)\",",
                "    \"\\t               {\",",
                "    \"\\t               Summary.WriteMessage(this, \\\"Result: Failed to Emerge.\\\", MessageType.Diagnostic);\",",
                "    \"\\t\\t\\t\\t   End = true;\",",
                "    \"\\t\\t\\t\\t   Result = \\\"Failed to Emerge.\\\";\",",
                "    \"\\t\\t        }\",",
                "    \"\\t\\t        else if (Weather.MaxT <= LethalFrost && Stage < 9)\",",
                "    \"\\t               {\",",
                "    \"\\t               Summary.WriteMessage(this, \\\"Result: Dead from Frost.\\\", MessageType.Diagnostic);\",",
                "    \"\\t\\t\\t\\t   End = true;\",",
                "    \"\\t\\t\\t\\t   Result = \\\"Dead from Frost.\\\";\",",
                "    \"\\t\\t        }\",",
                "    \"\\t\\t        else if (LAI <= 0.001 && Stage > 4 && Stage < 10)\",",
                "    \"\\t               {\",",
                "    \"\\t               Summary.WriteMessage(this, \\\"Result: Dead from Total Senescence (0 LAI between Flowering and Maturation).\\\", MessageType.Diagnostic);\",",
                "    \"\\t\\t\\t\\t   End = true;\",",
                "    \"\\t\\t\\t\\t   Result = \\\"Dead from Total Senescence.\\\";\",",
                "    \"\\t\\t        }\",",
                "    \"\\t        }\",",
                "    \"\\t        \",",
                "    \"\\t        if (End == true) {\",",
                "    \"\\t\\t\\t\\tCrop.Harvest();\",",
                "    \"\\t\\t        Crop.EndCrop();\",",
                "    \"\\t        }\",",
                "    \"      \\t}\",",
                "    \"    }\",",
                "    \"}\",",
                "    \"       \"",
                "  ],",
                "  \"Parameters\": [",
                "    {",
                "      \"Key\": \"GermWait\",",
                "      \"Value\": \"30\"",
                "    },",
                "    {",
                "      \"Key\": \"EmergWait\",",
                "      \"Value\": \"30\"",
                "    },",
                "    {",
                "      \"Key\": \"LethalFrost\",",
                "      \"Value\": \"-2.5\"",
                "    },",
                "    {",
                "      \"Key\": \"MaxStall\",",
                "      \"Value\": \"14\"",
                "    }",
                "  ],",
                "  \"Name\": \"ReaperMan\",",
                "  \"ResourceName\": null,",
                "  \"Children\": [],",
                "  \"Enabled\": true,",
                "  \"ReadOnly\": false",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Maize]"
                },
                {
                  "Key": "MaxStall",
                  "Value": "14"
                }
              ],
              "Name": "Stall kill",
              "ResourceName": null,
              "Children": [],
              "Enabled": false,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using System.Linq;",
                "using Models.Functions;",
                "using System.Diagnostics;",
                "using Models.Climate;",
                "",
                "namespace Models",
                "{",
                "    [Serializable] ",
                "    public class Script : Model",
                "    {",
                "\t\t[Link] Clock Clock;",
                "        [Link] Zone Zone;",
                "        [Link] Weather Weather;",
                "        [Link] Summary Summary;",
                "        [Link] IEvent Events = null;",
                "        [Link] IPlant Crop;",
                "        ",
                "        [Separator(\"Triggers to kill the crop\")]",
                "",
                "        [Description(\"Number of days to wait before killing ungerminated plants\")] ",
                "        public int GermWait { get; set; }  ",
                "        ",
                "        [Description(\"Number of days to wait before killing unemerged plants\")] ",
                "        public int EmergWait { get; set; }  ",
                "        ",
                "        [Description(\"Kill if maximum daily tempterature is below (C)\")]  ",
                "        public double LethalFrost { get; set; }",
                "        ",
                "        [Description(\"Number of days to wait before killing stalled plants\")] ",
                "        public int MaxStall { get; set; }  ",
                "        public double PrevStage {get; set;}",
                "        public int StalledFor {get; set;}  ",
                "        ",
                "        private DateTime GerminationDeadline; ",
                "        private DateTime EmergenceDeadline; ",
                "        ",
                "        public string Result {get; set;}  ",
                "        ",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            double PrevStage = 0;",
                "            double StalledFor = 0;",
                "        }",
                "        ",
                "        [EventSubscribe(\"Sowing\")]",
                "        private void OnSowing(object sender, EventArgs e)",
                "        {",
                "            GerminationDeadline = Clock.Today.AddDays(GermWait);",
                "            EmergenceDeadline = Clock.Today.AddDays(EmergWait);",
                "        }",
                "\t\t",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "  \t\t\tbool End = false;",
                "  \t\t\tResult = \"NA\";",
                "  \t\t\t",
                "            if (Crop.IsReadyForHarvesting)",
                "            {",
                "            \tSummary.WriteMessage(this, \"Result: Harvested at Maturity.\", MessageType.Diagnostic);",
                "                End = true;",
                "                Result = \"Harvested at Maturity.\";",
                "            } ",
                "            else if (Crop.IsAlive) ",
                "            {",
                "\t        \tdouble Stage = (double)Crop.FindByPath(\"Phenology.Stage\").Value; ",
                "\t        \tdouble LAI = (double)Crop.FindByPath(\"Leaf.LAI\").Value; ",
                "\t        \t        \t",
                "\t\t        if (Stage == PrevStage) {",
                "\t\t        \tStalledFor += 1;",
                "\t\t        \tif (StalledFor >= MaxStall)",
                "\t\t        \t{",
                "\t\t\t        \tSummary.WriteMessage(this, \"Result: Stalled, killed.\", MessageType.Diagnostic);",
                "\t\t\t        \tStalledFor = 0;",
                "\t\t\t        \tPrevStage = 0;",
                "\t\t\t\t\t\tEnd = true;",
                "\t\t\t\t\t\tResult = \"Stalled, killed.\";",
                "\t\t        \t}",
                "\t\t        } ",
                "\t\t        else ",
                "\t\t        {",
                "\t\t       \t\tStalledFor = 0;",
                "\t\t        }",
                "\t\t\t\tPrevStage = Stage;",
                "",
                "\t        \tif (Clock.Today == GerminationDeadline && Stage < 2)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Failed to Germinate.\", MessageType.Diagnostic);",
                "\t               End = true;",
                "\t               Result = \"Failed to Germinate.\";",
                "\t\t        }",
                "\t            else if (Clock.Today == EmergenceDeadline && Stage < 3)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Failed to Emerge.\", MessageType.Diagnostic);",
                "\t\t\t\t   End = true;",
                "\t\t\t\t   Result = \"Failed to Emerge.\";",
                "\t\t        }",
                "\t\t        else if (Weather.MaxT <= LethalFrost && Stage < 9)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Dead from Frost.\", MessageType.Diagnostic);",
                "\t\t\t\t   End = true;",
                "\t\t\t\t   Result = \"Dead from Frost.\";",
                "\t\t        }",
                "\t\t        else if (LAI <= 0.001 && Stage > 4 && Stage < 10)",
                "\t               {",
                "\t               Summary.WriteMessage(this, \"Result: Dead from Total Senescence (0 LAI between Flowering and Maturation).\", MessageType.Diagnostic);",
                "\t\t\t\t   End = true;",
                "\t\t\t\t   Result = \"Dead from Total Senescence.\";",
                "\t\t        }",
                "\t        }",
                "\t        ",
                "\t        if (End == true) {",
                "\t\t\t\tCrop.Harvest();",
                "\t\t        Crop.EndCrop();",
                "\t        }",
                "      \t}",
                "    }",
                "}",
                "       "
              ],
              "Parameters": [
                {
                  "Key": "GermWait",
                  "Value": "30"
                },
                {
                  "Key": "EmergWait",
                  "Value": "30"
                },
                {
                  "Key": "LethalFrost",
                  "Value": "-2.5"
                },
                {
                  "Key": "MaxStall",
                  "Value": "14"
                }
              ],
              "Name": "ReaperMan",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}